/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.useridentities.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import com.seam.api.types.Device;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UserIdentitiesListAccessibleDevicesResponse.Builder.class)
public final class UserIdentitiesListAccessibleDevicesResponse {
    private final List<Device> devices;

    private final List<Device> accessibleDevices;

    private final boolean ok;

    private final Map<String, Object> additionalProperties;

    private UserIdentitiesListAccessibleDevicesResponse(
            List<Device> devices,
            List<Device> accessibleDevices,
            boolean ok,
            Map<String, Object> additionalProperties) {
        this.devices = devices;
        this.accessibleDevices = accessibleDevices;
        this.ok = ok;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("devices")
    public List<Device> getDevices() {
        return devices;
    }

    @JsonProperty("accessible_devices")
    public List<Device> getAccessibleDevices() {
        return accessibleDevices;
    }

    @JsonProperty("ok")
    public boolean getOk() {
        return ok;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UserIdentitiesListAccessibleDevicesResponse
                && equalTo((UserIdentitiesListAccessibleDevicesResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UserIdentitiesListAccessibleDevicesResponse other) {
        return devices.equals(other.devices) && accessibleDevices.equals(other.accessibleDevices) && ok == other.ok;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.devices, this.accessibleDevices, this.ok);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OkStage builder() {
        return new Builder();
    }

    public interface OkStage {
        _FinalStage ok(boolean ok);

        Builder from(UserIdentitiesListAccessibleDevicesResponse other);
    }

    public interface _FinalStage {
        UserIdentitiesListAccessibleDevicesResponse build();

        _FinalStage devices(List<Device> devices);

        _FinalStage addDevices(Device devices);

        _FinalStage addAllDevices(List<Device> devices);

        _FinalStage accessibleDevices(List<Device> accessibleDevices);

        _FinalStage addAccessibleDevices(Device accessibleDevices);

        _FinalStage addAllAccessibleDevices(List<Device> accessibleDevices);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OkStage, _FinalStage {
        private boolean ok;

        private List<Device> accessibleDevices = new ArrayList<>();

        private List<Device> devices = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UserIdentitiesListAccessibleDevicesResponse other) {
            devices(other.getDevices());
            accessibleDevices(other.getAccessibleDevices());
            ok(other.getOk());
            return this;
        }

        @java.lang.Override
        @JsonSetter("ok")
        public _FinalStage ok(boolean ok) {
            this.ok = ok;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllAccessibleDevices(List<Device> accessibleDevices) {
            this.accessibleDevices.addAll(accessibleDevices);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAccessibleDevices(Device accessibleDevices) {
            this.accessibleDevices.add(accessibleDevices);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "accessible_devices", nulls = Nulls.SKIP)
        public _FinalStage accessibleDevices(List<Device> accessibleDevices) {
            this.accessibleDevices.clear();
            this.accessibleDevices.addAll(accessibleDevices);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllDevices(List<Device> devices) {
            this.devices.addAll(devices);
            return this;
        }

        @java.lang.Override
        public _FinalStage addDevices(Device devices) {
            this.devices.add(devices);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "devices", nulls = Nulls.SKIP)
        public _FinalStage devices(List<Device> devices) {
            this.devices.clear();
            this.devices.addAll(devices);
            return this;
        }

        @java.lang.Override
        public UserIdentitiesListAccessibleDevicesResponse build() {
            return new UserIdentitiesListAccessibleDevicesResponse(
                    devices, accessibleDevices, ok, additionalProperties);
        }
    }
}
