/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.networks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import com.seam.api.types.Network;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = NetworksGetResponse.Builder.class)
public final class NetworksGetResponse {
    private final Network network;

    private final boolean ok;

    private final Map<String, Object> additionalProperties;

    private NetworksGetResponse(Network network, boolean ok, Map<String, Object> additionalProperties) {
        this.network = network;
        this.ok = ok;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("network")
    public Network getNetwork() {
        return network;
    }

    @JsonProperty("ok")
    public boolean getOk() {
        return ok;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof NetworksGetResponse && equalTo((NetworksGetResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(NetworksGetResponse other) {
        return network.equals(other.network) && ok == other.ok;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.network, this.ok);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NetworkStage builder() {
        return new Builder();
    }

    public interface NetworkStage {
        OkStage network(Network network);

        Builder from(NetworksGetResponse other);
    }

    public interface OkStage {
        _FinalStage ok(boolean ok);
    }

    public interface _FinalStage {
        NetworksGetResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NetworkStage, OkStage, _FinalStage {
        private Network network;

        private boolean ok;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(NetworksGetResponse other) {
            network(other.getNetwork());
            ok(other.getOk());
            return this;
        }

        @java.lang.Override
        @JsonSetter("network")
        public OkStage network(Network network) {
            this.network = network;
            return this;
        }

        @java.lang.Override
        @JsonSetter("ok")
        public _FinalStage ok(boolean ok) {
            this.ok = ok;
            return this;
        }

        @java.lang.Override
        public NetworksGetResponse build() {
            return new NetworksGetResponse(network, ok, additionalProperties);
        }
    }
}
