/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.users.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UsersCreateRequestAccessSchedule.Builder.class)
public final class UsersCreateRequestAccessSchedule {
    private final OffsetDateTime startsAt;

    private final OffsetDateTime endsAt;

    private final Map<String, Object> additionalProperties;

    private UsersCreateRequestAccessSchedule(
            OffsetDateTime startsAt, OffsetDateTime endsAt, Map<String, Object> additionalProperties) {
        this.startsAt = startsAt;
        this.endsAt = endsAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("starts_at")
    public OffsetDateTime getStartsAt() {
        return startsAt;
    }

    @JsonProperty("ends_at")
    public OffsetDateTime getEndsAt() {
        return endsAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UsersCreateRequestAccessSchedule && equalTo((UsersCreateRequestAccessSchedule) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UsersCreateRequestAccessSchedule other) {
        return startsAt.equals(other.startsAt) && endsAt.equals(other.endsAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.startsAt, this.endsAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static StartsAtStage builder() {
        return new Builder();
    }

    public interface StartsAtStage {
        EndsAtStage startsAt(OffsetDateTime startsAt);

        Builder from(UsersCreateRequestAccessSchedule other);
    }

    public interface EndsAtStage {
        _FinalStage endsAt(OffsetDateTime endsAt);
    }

    public interface _FinalStage {
        UsersCreateRequestAccessSchedule build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements StartsAtStage, EndsAtStage, _FinalStage {
        private OffsetDateTime startsAt;

        private OffsetDateTime endsAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UsersCreateRequestAccessSchedule other) {
            startsAt(other.getStartsAt());
            endsAt(other.getEndsAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("starts_at")
        public EndsAtStage startsAt(OffsetDateTime startsAt) {
            this.startsAt = startsAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("ends_at")
        public _FinalStage endsAt(OffsetDateTime endsAt) {
            this.endsAt = endsAt;
            return this;
        }

        @java.lang.Override
        public UsersCreateRequestAccessSchedule build() {
            return new UsersCreateRequestAccessSchedule(startsAt, endsAt, additionalProperties);
        }
    }
}
