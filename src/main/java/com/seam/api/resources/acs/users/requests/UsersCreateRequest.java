/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.users.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import com.seam.api.resources.acs.users.types.UsersCreateRequestAccessSchedule;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UsersCreateRequest.Builder.class)
public final class UsersCreateRequest {
    private final String acsSystemId;

    private final Optional<List<String>> acsAccessGroupIds;

    private final Optional<String> userIdentityId;

    private final Optional<UsersCreateRequestAccessSchedule> accessSchedule;

    private final Optional<String> fullName;

    private final Optional<String> email;

    private final Optional<String> phoneNumber;

    private final Optional<String> emailAddress;

    private final Map<String, Object> additionalProperties;

    private UsersCreateRequest(
            String acsSystemId,
            Optional<List<String>> acsAccessGroupIds,
            Optional<String> userIdentityId,
            Optional<UsersCreateRequestAccessSchedule> accessSchedule,
            Optional<String> fullName,
            Optional<String> email,
            Optional<String> phoneNumber,
            Optional<String> emailAddress,
            Map<String, Object> additionalProperties) {
        this.acsSystemId = acsSystemId;
        this.acsAccessGroupIds = acsAccessGroupIds;
        this.userIdentityId = userIdentityId;
        this.accessSchedule = accessSchedule;
        this.fullName = fullName;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.emailAddress = emailAddress;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acs_system_id")
    public String getAcsSystemId() {
        return acsSystemId;
    }

    @JsonProperty("acs_access_group_ids")
    public Optional<List<String>> getAcsAccessGroupIds() {
        return acsAccessGroupIds;
    }

    @JsonProperty("user_identity_id")
    public Optional<String> getUserIdentityId() {
        return userIdentityId;
    }

    @JsonProperty("access_schedule")
    public Optional<UsersCreateRequestAccessSchedule> getAccessSchedule() {
        return accessSchedule;
    }

    @JsonProperty("full_name")
    public Optional<String> getFullName() {
        return fullName;
    }

    @JsonProperty("email")
    public Optional<String> getEmail() {
        return email;
    }

    @JsonProperty("phone_number")
    public Optional<String> getPhoneNumber() {
        return phoneNumber;
    }

    @JsonProperty("email_address")
    public Optional<String> getEmailAddress() {
        return emailAddress;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UsersCreateRequest && equalTo((UsersCreateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UsersCreateRequest other) {
        return acsSystemId.equals(other.acsSystemId)
                && acsAccessGroupIds.equals(other.acsAccessGroupIds)
                && userIdentityId.equals(other.userIdentityId)
                && accessSchedule.equals(other.accessSchedule)
                && fullName.equals(other.fullName)
                && email.equals(other.email)
                && phoneNumber.equals(other.phoneNumber)
                && emailAddress.equals(other.emailAddress);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.acsSystemId,
                this.acsAccessGroupIds,
                this.userIdentityId,
                this.accessSchedule,
                this.fullName,
                this.email,
                this.phoneNumber,
                this.emailAddress);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AcsSystemIdStage builder() {
        return new Builder();
    }

    public interface AcsSystemIdStage {
        _FinalStage acsSystemId(String acsSystemId);

        Builder from(UsersCreateRequest other);
    }

    public interface _FinalStage {
        UsersCreateRequest build();

        _FinalStage acsAccessGroupIds(Optional<List<String>> acsAccessGroupIds);

        _FinalStage acsAccessGroupIds(List<String> acsAccessGroupIds);

        _FinalStage userIdentityId(Optional<String> userIdentityId);

        _FinalStage userIdentityId(String userIdentityId);

        _FinalStage accessSchedule(Optional<UsersCreateRequestAccessSchedule> accessSchedule);

        _FinalStage accessSchedule(UsersCreateRequestAccessSchedule accessSchedule);

        _FinalStage fullName(Optional<String> fullName);

        _FinalStage fullName(String fullName);

        _FinalStage email(Optional<String> email);

        _FinalStage email(String email);

        _FinalStage phoneNumber(Optional<String> phoneNumber);

        _FinalStage phoneNumber(String phoneNumber);

        _FinalStage emailAddress(Optional<String> emailAddress);

        _FinalStage emailAddress(String emailAddress);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AcsSystemIdStage, _FinalStage {
        private String acsSystemId;

        private Optional<String> emailAddress = Optional.empty();

        private Optional<String> phoneNumber = Optional.empty();

        private Optional<String> email = Optional.empty();

        private Optional<String> fullName = Optional.empty();

        private Optional<UsersCreateRequestAccessSchedule> accessSchedule = Optional.empty();

        private Optional<String> userIdentityId = Optional.empty();

        private Optional<List<String>> acsAccessGroupIds = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UsersCreateRequest other) {
            acsSystemId(other.getAcsSystemId());
            acsAccessGroupIds(other.getAcsAccessGroupIds());
            userIdentityId(other.getUserIdentityId());
            accessSchedule(other.getAccessSchedule());
            fullName(other.getFullName());
            email(other.getEmail());
            phoneNumber(other.getPhoneNumber());
            emailAddress(other.getEmailAddress());
            return this;
        }

        @java.lang.Override
        @JsonSetter("acs_system_id")
        public _FinalStage acsSystemId(String acsSystemId) {
            this.acsSystemId = acsSystemId;
            return this;
        }

        @java.lang.Override
        public _FinalStage emailAddress(String emailAddress) {
            this.emailAddress = Optional.of(emailAddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "email_address", nulls = Nulls.SKIP)
        public _FinalStage emailAddress(Optional<String> emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage phoneNumber(String phoneNumber) {
            this.phoneNumber = Optional.of(phoneNumber);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "phone_number", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<String> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @java.lang.Override
        public _FinalStage email(String email) {
            this.email = Optional.of(email);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "email", nulls = Nulls.SKIP)
        public _FinalStage email(Optional<String> email) {
            this.email = email;
            return this;
        }

        @java.lang.Override
        public _FinalStage fullName(String fullName) {
            this.fullName = Optional.of(fullName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "full_name", nulls = Nulls.SKIP)
        public _FinalStage fullName(Optional<String> fullName) {
            this.fullName = fullName;
            return this;
        }

        @java.lang.Override
        public _FinalStage accessSchedule(UsersCreateRequestAccessSchedule accessSchedule) {
            this.accessSchedule = Optional.of(accessSchedule);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "access_schedule", nulls = Nulls.SKIP)
        public _FinalStage accessSchedule(Optional<UsersCreateRequestAccessSchedule> accessSchedule) {
            this.accessSchedule = accessSchedule;
            return this;
        }

        @java.lang.Override
        public _FinalStage userIdentityId(String userIdentityId) {
            this.userIdentityId = Optional.of(userIdentityId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_identity_id", nulls = Nulls.SKIP)
        public _FinalStage userIdentityId(Optional<String> userIdentityId) {
            this.userIdentityId = userIdentityId;
            return this;
        }

        @java.lang.Override
        public _FinalStage acsAccessGroupIds(List<String> acsAccessGroupIds) {
            this.acsAccessGroupIds = Optional.of(acsAccessGroupIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "acs_access_group_ids", nulls = Nulls.SKIP)
        public _FinalStage acsAccessGroupIds(Optional<List<String>> acsAccessGroupIds) {
            this.acsAccessGroupIds = acsAccessGroupIds;
            return this;
        }

        @java.lang.Override
        public UsersCreateRequest build() {
            return new UsersCreateRequest(
                    acsSystemId,
                    acsAccessGroupIds,
                    userIdentityId,
                    accessSchedule,
                    fullName,
                    email,
                    phoneNumber,
                    emailAddress,
                    additionalProperties);
        }
    }
}
