/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.entrances.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = EntrancesGetRequest.Builder.class)
public final class EntrancesGetRequest {
    private final String acsEntranceId;

    private final Map<String, Object> additionalProperties;

    private EntrancesGetRequest(String acsEntranceId, Map<String, Object> additionalProperties) {
        this.acsEntranceId = acsEntranceId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acs_entrance_id")
    public String getAcsEntranceId() {
        return acsEntranceId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EntrancesGetRequest && equalTo((EntrancesGetRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EntrancesGetRequest other) {
        return acsEntranceId.equals(other.acsEntranceId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.acsEntranceId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AcsEntranceIdStage builder() {
        return new Builder();
    }

    public interface AcsEntranceIdStage {
        _FinalStage acsEntranceId(String acsEntranceId);

        Builder from(EntrancesGetRequest other);
    }

    public interface _FinalStage {
        EntrancesGetRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AcsEntranceIdStage, _FinalStage {
        private String acsEntranceId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EntrancesGetRequest other) {
            acsEntranceId(other.getAcsEntranceId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("acs_entrance_id")
        public _FinalStage acsEntranceId(String acsEntranceId) {
            this.acsEntranceId = acsEntranceId;
            return this;
        }

        @java.lang.Override
        public EntrancesGetRequest build() {
            return new EntrancesGetRequest(acsEntranceId, additionalProperties);
        }
    }
}
