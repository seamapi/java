/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.credentials.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import com.seam.api.resources.acs.credentials.types.CredentialsCreateRequestAccessMethod;
import com.seam.api.resources.acs.credentials.types.CredentialsCreateRequestVisionlineMetadata;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CredentialsCreateRequest.Builder.class)
public final class CredentialsCreateRequest {
    private final Optional<String> credentialManagerAcsSystemId;

    private final String acsUserId;

    private final CredentialsCreateRequestAccessMethod accessMethod;

    private final Optional<String> code;

    private final Optional<Boolean> isMultiPhoneSyncCredential;

    private final Optional<List<String>> allowedAcsEntranceIds;

    private final Optional<CredentialsCreateRequestVisionlineMetadata> visionlineMetadata;

    private final Optional<OffsetDateTime> startsAt;

    private final Optional<OffsetDateTime> endsAt;

    private final Map<String, Object> additionalProperties;

    private CredentialsCreateRequest(
            Optional<String> credentialManagerAcsSystemId,
            String acsUserId,
            CredentialsCreateRequestAccessMethod accessMethod,
            Optional<String> code,
            Optional<Boolean> isMultiPhoneSyncCredential,
            Optional<List<String>> allowedAcsEntranceIds,
            Optional<CredentialsCreateRequestVisionlineMetadata> visionlineMetadata,
            Optional<OffsetDateTime> startsAt,
            Optional<OffsetDateTime> endsAt,
            Map<String, Object> additionalProperties) {
        this.credentialManagerAcsSystemId = credentialManagerAcsSystemId;
        this.acsUserId = acsUserId;
        this.accessMethod = accessMethod;
        this.code = code;
        this.isMultiPhoneSyncCredential = isMultiPhoneSyncCredential;
        this.allowedAcsEntranceIds = allowedAcsEntranceIds;
        this.visionlineMetadata = visionlineMetadata;
        this.startsAt = startsAt;
        this.endsAt = endsAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("credential_manager_acs_system_id")
    public Optional<String> getCredentialManagerAcsSystemId() {
        return credentialManagerAcsSystemId;
    }

    @JsonProperty("acs_user_id")
    public String getAcsUserId() {
        return acsUserId;
    }

    @JsonProperty("access_method")
    public CredentialsCreateRequestAccessMethod getAccessMethod() {
        return accessMethod;
    }

    @JsonProperty("code")
    public Optional<String> getCode() {
        return code;
    }

    @JsonProperty("is_multi_phone_sync_credential")
    public Optional<Boolean> getIsMultiPhoneSyncCredential() {
        return isMultiPhoneSyncCredential;
    }

    @JsonProperty("allowed_acs_entrance_ids")
    public Optional<List<String>> getAllowedAcsEntranceIds() {
        return allowedAcsEntranceIds;
    }

    @JsonProperty("visionline_metadata")
    public Optional<CredentialsCreateRequestVisionlineMetadata> getVisionlineMetadata() {
        return visionlineMetadata;
    }

    @JsonProperty("starts_at")
    public Optional<OffsetDateTime> getStartsAt() {
        return startsAt;
    }

    @JsonProperty("ends_at")
    public Optional<OffsetDateTime> getEndsAt() {
        return endsAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CredentialsCreateRequest && equalTo((CredentialsCreateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CredentialsCreateRequest other) {
        return credentialManagerAcsSystemId.equals(other.credentialManagerAcsSystemId)
                && acsUserId.equals(other.acsUserId)
                && accessMethod.equals(other.accessMethod)
                && code.equals(other.code)
                && isMultiPhoneSyncCredential.equals(other.isMultiPhoneSyncCredential)
                && allowedAcsEntranceIds.equals(other.allowedAcsEntranceIds)
                && visionlineMetadata.equals(other.visionlineMetadata)
                && startsAt.equals(other.startsAt)
                && endsAt.equals(other.endsAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.credentialManagerAcsSystemId,
                this.acsUserId,
                this.accessMethod,
                this.code,
                this.isMultiPhoneSyncCredential,
                this.allowedAcsEntranceIds,
                this.visionlineMetadata,
                this.startsAt,
                this.endsAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AcsUserIdStage builder() {
        return new Builder();
    }

    public interface AcsUserIdStage {
        AccessMethodStage acsUserId(String acsUserId);

        Builder from(CredentialsCreateRequest other);
    }

    public interface AccessMethodStage {
        _FinalStage accessMethod(CredentialsCreateRequestAccessMethod accessMethod);
    }

    public interface _FinalStage {
        CredentialsCreateRequest build();

        _FinalStage credentialManagerAcsSystemId(Optional<String> credentialManagerAcsSystemId);

        _FinalStage credentialManagerAcsSystemId(String credentialManagerAcsSystemId);

        _FinalStage code(Optional<String> code);

        _FinalStage code(String code);

        _FinalStage isMultiPhoneSyncCredential(Optional<Boolean> isMultiPhoneSyncCredential);

        _FinalStage isMultiPhoneSyncCredential(Boolean isMultiPhoneSyncCredential);

        _FinalStage allowedAcsEntranceIds(Optional<List<String>> allowedAcsEntranceIds);

        _FinalStage allowedAcsEntranceIds(List<String> allowedAcsEntranceIds);

        _FinalStage visionlineMetadata(Optional<CredentialsCreateRequestVisionlineMetadata> visionlineMetadata);

        _FinalStage visionlineMetadata(CredentialsCreateRequestVisionlineMetadata visionlineMetadata);

        _FinalStage startsAt(Optional<OffsetDateTime> startsAt);

        _FinalStage startsAt(OffsetDateTime startsAt);

        _FinalStage endsAt(Optional<OffsetDateTime> endsAt);

        _FinalStage endsAt(OffsetDateTime endsAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AcsUserIdStage, AccessMethodStage, _FinalStage {
        private String acsUserId;

        private CredentialsCreateRequestAccessMethod accessMethod;

        private Optional<OffsetDateTime> endsAt = Optional.empty();

        private Optional<OffsetDateTime> startsAt = Optional.empty();

        private Optional<CredentialsCreateRequestVisionlineMetadata> visionlineMetadata = Optional.empty();

        private Optional<List<String>> allowedAcsEntranceIds = Optional.empty();

        private Optional<Boolean> isMultiPhoneSyncCredential = Optional.empty();

        private Optional<String> code = Optional.empty();

        private Optional<String> credentialManagerAcsSystemId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CredentialsCreateRequest other) {
            credentialManagerAcsSystemId(other.getCredentialManagerAcsSystemId());
            acsUserId(other.getAcsUserId());
            accessMethod(other.getAccessMethod());
            code(other.getCode());
            isMultiPhoneSyncCredential(other.getIsMultiPhoneSyncCredential());
            allowedAcsEntranceIds(other.getAllowedAcsEntranceIds());
            visionlineMetadata(other.getVisionlineMetadata());
            startsAt(other.getStartsAt());
            endsAt(other.getEndsAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("acs_user_id")
        public AccessMethodStage acsUserId(String acsUserId) {
            this.acsUserId = acsUserId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("access_method")
        public _FinalStage accessMethod(CredentialsCreateRequestAccessMethod accessMethod) {
            this.accessMethod = accessMethod;
            return this;
        }

        @java.lang.Override
        public _FinalStage endsAt(OffsetDateTime endsAt) {
            this.endsAt = Optional.of(endsAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ends_at", nulls = Nulls.SKIP)
        public _FinalStage endsAt(Optional<OffsetDateTime> endsAt) {
            this.endsAt = endsAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage startsAt(OffsetDateTime startsAt) {
            this.startsAt = Optional.of(startsAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "starts_at", nulls = Nulls.SKIP)
        public _FinalStage startsAt(Optional<OffsetDateTime> startsAt) {
            this.startsAt = startsAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage visionlineMetadata(CredentialsCreateRequestVisionlineMetadata visionlineMetadata) {
            this.visionlineMetadata = Optional.of(visionlineMetadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "visionline_metadata", nulls = Nulls.SKIP)
        public _FinalStage visionlineMetadata(Optional<CredentialsCreateRequestVisionlineMetadata> visionlineMetadata) {
            this.visionlineMetadata = visionlineMetadata;
            return this;
        }

        @java.lang.Override
        public _FinalStage allowedAcsEntranceIds(List<String> allowedAcsEntranceIds) {
            this.allowedAcsEntranceIds = Optional.of(allowedAcsEntranceIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "allowed_acs_entrance_ids", nulls = Nulls.SKIP)
        public _FinalStage allowedAcsEntranceIds(Optional<List<String>> allowedAcsEntranceIds) {
            this.allowedAcsEntranceIds = allowedAcsEntranceIds;
            return this;
        }

        @java.lang.Override
        public _FinalStage isMultiPhoneSyncCredential(Boolean isMultiPhoneSyncCredential) {
            this.isMultiPhoneSyncCredential = Optional.of(isMultiPhoneSyncCredential);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_multi_phone_sync_credential", nulls = Nulls.SKIP)
        public _FinalStage isMultiPhoneSyncCredential(Optional<Boolean> isMultiPhoneSyncCredential) {
            this.isMultiPhoneSyncCredential = isMultiPhoneSyncCredential;
            return this;
        }

        @java.lang.Override
        public _FinalStage code(String code) {
            this.code = Optional.of(code);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "code", nulls = Nulls.SKIP)
        public _FinalStage code(Optional<String> code) {
            this.code = code;
            return this;
        }

        @java.lang.Override
        public _FinalStage credentialManagerAcsSystemId(String credentialManagerAcsSystemId) {
            this.credentialManagerAcsSystemId = Optional.of(credentialManagerAcsSystemId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "credential_manager_acs_system_id", nulls = Nulls.SKIP)
        public _FinalStage credentialManagerAcsSystemId(Optional<String> credentialManagerAcsSystemId) {
            this.credentialManagerAcsSystemId = credentialManagerAcsSystemId;
            return this;
        }

        @java.lang.Override
        public CredentialsCreateRequest build() {
            return new CredentialsCreateRequest(
                    credentialManagerAcsSystemId,
                    acsUserId,
                    accessMethod,
                    code,
                    isMultiPhoneSyncCredential,
                    allowedAcsEntranceIds,
                    visionlineMetadata,
                    startsAt,
                    endsAt,
                    additionalProperties);
        }
    }
}
