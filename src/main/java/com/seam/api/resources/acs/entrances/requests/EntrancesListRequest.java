/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.entrances.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = EntrancesListRequest.Builder.class)
public final class EntrancesListRequest {
    private final Optional<String> acsSystemId;

    private final Optional<String> acsCredentialId;

    private final Map<String, Object> additionalProperties;

    private EntrancesListRequest(
            Optional<String> acsSystemId, Optional<String> acsCredentialId, Map<String, Object> additionalProperties) {
        this.acsSystemId = acsSystemId;
        this.acsCredentialId = acsCredentialId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acs_system_id")
    public Optional<String> getAcsSystemId() {
        return acsSystemId;
    }

    @JsonProperty("acs_credential_id")
    public Optional<String> getAcsCredentialId() {
        return acsCredentialId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EntrancesListRequest && equalTo((EntrancesListRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EntrancesListRequest other) {
        return acsSystemId.equals(other.acsSystemId) && acsCredentialId.equals(other.acsCredentialId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.acsSystemId, this.acsCredentialId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> acsSystemId = Optional.empty();

        private Optional<String> acsCredentialId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(EntrancesListRequest other) {
            acsSystemId(other.getAcsSystemId());
            acsCredentialId(other.getAcsCredentialId());
            return this;
        }

        @JsonSetter(value = "acs_system_id", nulls = Nulls.SKIP)
        public Builder acsSystemId(Optional<String> acsSystemId) {
            this.acsSystemId = acsSystemId;
            return this;
        }

        public Builder acsSystemId(String acsSystemId) {
            this.acsSystemId = Optional.of(acsSystemId);
            return this;
        }

        @JsonSetter(value = "acs_credential_id", nulls = Nulls.SKIP)
        public Builder acsCredentialId(Optional<String> acsCredentialId) {
            this.acsCredentialId = acsCredentialId;
            return this;
        }

        public Builder acsCredentialId(String acsCredentialId) {
            this.acsCredentialId = Optional.of(acsCredentialId);
            return this;
        }

        public EntrancesListRequest build() {
            return new EntrancesListRequest(acsSystemId, acsCredentialId, additionalProperties);
        }
    }
}
