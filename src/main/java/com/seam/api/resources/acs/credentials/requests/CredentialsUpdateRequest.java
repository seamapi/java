/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.acs.credentials.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CredentialsUpdateRequest.Builder.class)
public final class CredentialsUpdateRequest {
    private final String acsCredentialId;

    private final Optional<String> code;

    private final Optional<OffsetDateTime> endsAt;

    private final Map<String, Object> additionalProperties;

    private CredentialsUpdateRequest(
            String acsCredentialId,
            Optional<String> code,
            Optional<OffsetDateTime> endsAt,
            Map<String, Object> additionalProperties) {
        this.acsCredentialId = acsCredentialId;
        this.code = code;
        this.endsAt = endsAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acs_credential_id")
    public String getAcsCredentialId() {
        return acsCredentialId;
    }

    @JsonProperty("code")
    public Optional<String> getCode() {
        return code;
    }

    @JsonProperty("ends_at")
    public Optional<OffsetDateTime> getEndsAt() {
        return endsAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CredentialsUpdateRequest && equalTo((CredentialsUpdateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CredentialsUpdateRequest other) {
        return acsCredentialId.equals(other.acsCredentialId) && code.equals(other.code) && endsAt.equals(other.endsAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.acsCredentialId, this.code, this.endsAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AcsCredentialIdStage builder() {
        return new Builder();
    }

    public interface AcsCredentialIdStage {
        _FinalStage acsCredentialId(String acsCredentialId);

        Builder from(CredentialsUpdateRequest other);
    }

    public interface _FinalStage {
        CredentialsUpdateRequest build();

        _FinalStage code(Optional<String> code);

        _FinalStage code(String code);

        _FinalStage endsAt(Optional<OffsetDateTime> endsAt);

        _FinalStage endsAt(OffsetDateTime endsAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AcsCredentialIdStage, _FinalStage {
        private String acsCredentialId;

        private Optional<OffsetDateTime> endsAt = Optional.empty();

        private Optional<String> code = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CredentialsUpdateRequest other) {
            acsCredentialId(other.getAcsCredentialId());
            code(other.getCode());
            endsAt(other.getEndsAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("acs_credential_id")
        public _FinalStage acsCredentialId(String acsCredentialId) {
            this.acsCredentialId = acsCredentialId;
            return this;
        }

        @java.lang.Override
        public _FinalStage endsAt(OffsetDateTime endsAt) {
            this.endsAt = Optional.of(endsAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ends_at", nulls = Nulls.SKIP)
        public _FinalStage endsAt(Optional<OffsetDateTime> endsAt) {
            this.endsAt = endsAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage code(String code) {
            this.code = Optional.of(code);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "code", nulls = Nulls.SKIP)
        public _FinalStage code(Optional<String> code) {
            this.code = code;
            return this;
        }

        @java.lang.Override
        public CredentialsUpdateRequest build() {
            return new CredentialsUpdateRequest(acsCredentialId, code, endsAt, additionalProperties);
        }
    }
}
