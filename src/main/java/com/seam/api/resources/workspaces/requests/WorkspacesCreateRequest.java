/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.workspaces.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import com.seam.api.resources.workspaces.types.WebviewLogoShape;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = WorkspacesCreateRequest.Builder.class)
public final class WorkspacesCreateRequest {
    private final String name;

    private final Optional<String> companyName;

    private final Optional<String> connectPartnerName;

    private final Optional<Boolean> isSandbox;

    private final Optional<String> webviewPrimaryButtonColor;

    private final Optional<WebviewLogoShape> webviewLogoShape;

    private final Map<String, Object> additionalProperties;

    private WorkspacesCreateRequest(
            String name,
            Optional<String> companyName,
            Optional<String> connectPartnerName,
            Optional<Boolean> isSandbox,
            Optional<String> webviewPrimaryButtonColor,
            Optional<WebviewLogoShape> webviewLogoShape,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.companyName = companyName;
        this.connectPartnerName = connectPartnerName;
        this.isSandbox = isSandbox;
        this.webviewPrimaryButtonColor = webviewPrimaryButtonColor;
        this.webviewLogoShape = webviewLogoShape;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("company_name")
    public Optional<String> getCompanyName() {
        return companyName;
    }

    @JsonProperty("connect_partner_name")
    public Optional<String> getConnectPartnerName() {
        return connectPartnerName;
    }

    @JsonProperty("is_sandbox")
    public Optional<Boolean> getIsSandbox() {
        return isSandbox;
    }

    @JsonProperty("webview_primary_button_color")
    public Optional<String> getWebviewPrimaryButtonColor() {
        return webviewPrimaryButtonColor;
    }

    @JsonProperty("webview_logo_shape")
    public Optional<WebviewLogoShape> getWebviewLogoShape() {
        return webviewLogoShape;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkspacesCreateRequest && equalTo((WorkspacesCreateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkspacesCreateRequest other) {
        return name.equals(other.name)
                && companyName.equals(other.companyName)
                && connectPartnerName.equals(other.connectPartnerName)
                && isSandbox.equals(other.isSandbox)
                && webviewPrimaryButtonColor.equals(other.webviewPrimaryButtonColor)
                && webviewLogoShape.equals(other.webviewLogoShape);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.name,
                this.companyName,
                this.connectPartnerName,
                this.isSandbox,
                this.webviewPrimaryButtonColor,
                this.webviewLogoShape);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        _FinalStage name(String name);

        Builder from(WorkspacesCreateRequest other);
    }

    public interface _FinalStage {
        WorkspacesCreateRequest build();

        _FinalStage companyName(Optional<String> companyName);

        _FinalStage companyName(String companyName);

        _FinalStage connectPartnerName(Optional<String> connectPartnerName);

        _FinalStage connectPartnerName(String connectPartnerName);

        _FinalStage isSandbox(Optional<Boolean> isSandbox);

        _FinalStage isSandbox(Boolean isSandbox);

        _FinalStage webviewPrimaryButtonColor(Optional<String> webviewPrimaryButtonColor);

        _FinalStage webviewPrimaryButtonColor(String webviewPrimaryButtonColor);

        _FinalStage webviewLogoShape(Optional<WebviewLogoShape> webviewLogoShape);

        _FinalStage webviewLogoShape(WebviewLogoShape webviewLogoShape);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, _FinalStage {
        private String name;

        private Optional<WebviewLogoShape> webviewLogoShape = Optional.empty();

        private Optional<String> webviewPrimaryButtonColor = Optional.empty();

        private Optional<Boolean> isSandbox = Optional.empty();

        private Optional<String> connectPartnerName = Optional.empty();

        private Optional<String> companyName = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkspacesCreateRequest other) {
            name(other.getName());
            companyName(other.getCompanyName());
            connectPartnerName(other.getConnectPartnerName());
            isSandbox(other.getIsSandbox());
            webviewPrimaryButtonColor(other.getWebviewPrimaryButtonColor());
            webviewLogoShape(other.getWebviewLogoShape());
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(String name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        public _FinalStage webviewLogoShape(WebviewLogoShape webviewLogoShape) {
            this.webviewLogoShape = Optional.of(webviewLogoShape);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "webview_logo_shape", nulls = Nulls.SKIP)
        public _FinalStage webviewLogoShape(Optional<WebviewLogoShape> webviewLogoShape) {
            this.webviewLogoShape = webviewLogoShape;
            return this;
        }

        @java.lang.Override
        public _FinalStage webviewPrimaryButtonColor(String webviewPrimaryButtonColor) {
            this.webviewPrimaryButtonColor = Optional.of(webviewPrimaryButtonColor);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "webview_primary_button_color", nulls = Nulls.SKIP)
        public _FinalStage webviewPrimaryButtonColor(Optional<String> webviewPrimaryButtonColor) {
            this.webviewPrimaryButtonColor = webviewPrimaryButtonColor;
            return this;
        }

        @java.lang.Override
        public _FinalStage isSandbox(Boolean isSandbox) {
            this.isSandbox = Optional.of(isSandbox);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_sandbox", nulls = Nulls.SKIP)
        public _FinalStage isSandbox(Optional<Boolean> isSandbox) {
            this.isSandbox = isSandbox;
            return this;
        }

        @java.lang.Override
        public _FinalStage connectPartnerName(String connectPartnerName) {
            this.connectPartnerName = Optional.of(connectPartnerName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "connect_partner_name", nulls = Nulls.SKIP)
        public _FinalStage connectPartnerName(Optional<String> connectPartnerName) {
            this.connectPartnerName = connectPartnerName;
            return this;
        }

        @java.lang.Override
        public _FinalStage companyName(String companyName) {
            this.companyName = Optional.of(companyName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "company_name", nulls = Nulls.SKIP)
        public _FinalStage companyName(Optional<String> companyName) {
            this.companyName = companyName;
            return this;
        }

        @java.lang.Override
        public WorkspacesCreateRequest build() {
            return new WorkspacesCreateRequest(
                    name,
                    companyName,
                    connectPartnerName,
                    isSandbox,
                    webviewPrimaryButtonColor,
                    webviewLogoShape,
                    additionalProperties);
        }
    }
}
