/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.resources.accesscodes.unmanaged.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UnmanagedListRequest.Builder.class)
public final class UnmanagedListRequest {
    private final String deviceId;

    private final Optional<String> userIdentifierKey;

    private final Map<String, Object> additionalProperties;

    private UnmanagedListRequest(
            String deviceId, Optional<String> userIdentifierKey, Map<String, Object> additionalProperties) {
        this.deviceId = deviceId;
        this.userIdentifierKey = userIdentifierKey;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("device_id")
    public String getDeviceId() {
        return deviceId;
    }

    @JsonProperty("user_identifier_key")
    public Optional<String> getUserIdentifierKey() {
        return userIdentifierKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UnmanagedListRequest && equalTo((UnmanagedListRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UnmanagedListRequest other) {
        return deviceId.equals(other.deviceId) && userIdentifierKey.equals(other.userIdentifierKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.deviceId, this.userIdentifierKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DeviceIdStage builder() {
        return new Builder();
    }

    public interface DeviceIdStage {
        _FinalStage deviceId(String deviceId);

        Builder from(UnmanagedListRequest other);
    }

    public interface _FinalStage {
        UnmanagedListRequest build();

        _FinalStage userIdentifierKey(Optional<String> userIdentifierKey);

        _FinalStage userIdentifierKey(String userIdentifierKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DeviceIdStage, _FinalStage {
        private String deviceId;

        private Optional<String> userIdentifierKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UnmanagedListRequest other) {
            deviceId(other.getDeviceId());
            userIdentifierKey(other.getUserIdentifierKey());
            return this;
        }

        @java.lang.Override
        @JsonSetter("device_id")
        public _FinalStage deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        @java.lang.Override
        public _FinalStage userIdentifierKey(String userIdentifierKey) {
            this.userIdentifierKey = Optional.of(userIdentifierKey);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_identifier_key", nulls = Nulls.SKIP)
        public _FinalStage userIdentifierKey(Optional<String> userIdentifierKey) {
            this.userIdentifierKey = userIdentifierKey;
            return this;
        }

        @java.lang.Override
        public UnmanagedListRequest build() {
            return new UnmanagedListRequest(deviceId, userIdentifierKey, additionalProperties);
        }
    }
}
