/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = DevicePropertiesIgloohomeMetadata.Builder.class)
public final class DevicePropertiesIgloohomeMetadata {
    private final String deviceId;

    private final String deviceName;

    private final Optional<String> bridgeId;

    private final Optional<String> bridgeName;

    private final Optional<String> keypadId;

    private final Map<String, Object> additionalProperties;

    private DevicePropertiesIgloohomeMetadata(
            String deviceId,
            String deviceName,
            Optional<String> bridgeId,
            Optional<String> bridgeName,
            Optional<String> keypadId,
            Map<String, Object> additionalProperties) {
        this.deviceId = deviceId;
        this.deviceName = deviceName;
        this.bridgeId = bridgeId;
        this.bridgeName = bridgeName;
        this.keypadId = keypadId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("device_id")
    public String getDeviceId() {
        return deviceId;
    }

    @JsonProperty("device_name")
    public String getDeviceName() {
        return deviceName;
    }

    @JsonProperty("bridge_id")
    public Optional<String> getBridgeId() {
        return bridgeId;
    }

    @JsonProperty("bridge_name")
    public Optional<String> getBridgeName() {
        return bridgeName;
    }

    @JsonProperty("keypad_id")
    public Optional<String> getKeypadId() {
        return keypadId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DevicePropertiesIgloohomeMetadata && equalTo((DevicePropertiesIgloohomeMetadata) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DevicePropertiesIgloohomeMetadata other) {
        return deviceId.equals(other.deviceId)
                && deviceName.equals(other.deviceName)
                && bridgeId.equals(other.bridgeId)
                && bridgeName.equals(other.bridgeName)
                && keypadId.equals(other.keypadId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.deviceId, this.deviceName, this.bridgeId, this.bridgeName, this.keypadId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DeviceIdStage builder() {
        return new Builder();
    }

    public interface DeviceIdStage {
        DeviceNameStage deviceId(String deviceId);

        Builder from(DevicePropertiesIgloohomeMetadata other);
    }

    public interface DeviceNameStage {
        _FinalStage deviceName(String deviceName);
    }

    public interface _FinalStage {
        DevicePropertiesIgloohomeMetadata build();

        _FinalStage bridgeId(Optional<String> bridgeId);

        _FinalStage bridgeId(String bridgeId);

        _FinalStage bridgeName(Optional<String> bridgeName);

        _FinalStage bridgeName(String bridgeName);

        _FinalStage keypadId(Optional<String> keypadId);

        _FinalStage keypadId(String keypadId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DeviceIdStage, DeviceNameStage, _FinalStage {
        private String deviceId;

        private String deviceName;

        private Optional<String> keypadId = Optional.empty();

        private Optional<String> bridgeName = Optional.empty();

        private Optional<String> bridgeId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DevicePropertiesIgloohomeMetadata other) {
            deviceId(other.getDeviceId());
            deviceName(other.getDeviceName());
            bridgeId(other.getBridgeId());
            bridgeName(other.getBridgeName());
            keypadId(other.getKeypadId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("device_id")
        public DeviceNameStage deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("device_name")
        public _FinalStage deviceName(String deviceName) {
            this.deviceName = deviceName;
            return this;
        }

        @java.lang.Override
        public _FinalStage keypadId(String keypadId) {
            this.keypadId = Optional.of(keypadId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "keypad_id", nulls = Nulls.SKIP)
        public _FinalStage keypadId(Optional<String> keypadId) {
            this.keypadId = keypadId;
            return this;
        }

        @java.lang.Override
        public _FinalStage bridgeName(String bridgeName) {
            this.bridgeName = Optional.of(bridgeName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bridge_name", nulls = Nulls.SKIP)
        public _FinalStage bridgeName(Optional<String> bridgeName) {
            this.bridgeName = bridgeName;
            return this;
        }

        @java.lang.Override
        public _FinalStage bridgeId(String bridgeId) {
            this.bridgeId = Optional.of(bridgeId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bridge_id", nulls = Nulls.SKIP)
        public _FinalStage bridgeId(Optional<String> bridgeId) {
            this.bridgeId = bridgeId;
            return this;
        }

        @java.lang.Override
        public DevicePropertiesIgloohomeMetadata build() {
            return new DevicePropertiesIgloohomeMetadata(
                    deviceId, deviceName, bridgeId, bridgeName, keypadId, additionalProperties);
        }
    }
}
