/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Phone.Builder.class)
public final class Phone {
    private final String deviceId;

    private final PhoneDeviceType deviceType;

    private final Optional<String> nickname;

    private final String displayName;

    private final List<PhoneCapabilitiesSupportedItem> capabilitiesSupported;

    private final PhoneProperties properties;

    private final Optional<PhoneLocation> location;

    private final String workspaceId;

    private final List<PhoneErrorsItem> errors;

    private final List<PhoneWarningsItem> warnings;

    private final OffsetDateTime createdAt;

    private final boolean isManaged;

    private final Map<String, PhoneCustomMetadataValue> customMetadata;

    private final Optional<Boolean> canRemotelyUnlock;

    private final Optional<Boolean> canRemotelyLock;

    private final Optional<Boolean> canProgramOfflineAccessCodes;

    private final Optional<Boolean> canProgramOnlineAccessCodes;

    private final Optional<Boolean> canSimulateRemoval;

    private final Optional<Boolean> canSimulateConnection;

    private final Optional<Boolean> canSimulateDisconnection;

    private final Map<String, Object> additionalProperties;

    private Phone(
            String deviceId,
            PhoneDeviceType deviceType,
            Optional<String> nickname,
            String displayName,
            List<PhoneCapabilitiesSupportedItem> capabilitiesSupported,
            PhoneProperties properties,
            Optional<PhoneLocation> location,
            String workspaceId,
            List<PhoneErrorsItem> errors,
            List<PhoneWarningsItem> warnings,
            OffsetDateTime createdAt,
            boolean isManaged,
            Map<String, PhoneCustomMetadataValue> customMetadata,
            Optional<Boolean> canRemotelyUnlock,
            Optional<Boolean> canRemotelyLock,
            Optional<Boolean> canProgramOfflineAccessCodes,
            Optional<Boolean> canProgramOnlineAccessCodes,
            Optional<Boolean> canSimulateRemoval,
            Optional<Boolean> canSimulateConnection,
            Optional<Boolean> canSimulateDisconnection,
            Map<String, Object> additionalProperties) {
        this.deviceId = deviceId;
        this.deviceType = deviceType;
        this.nickname = nickname;
        this.displayName = displayName;
        this.capabilitiesSupported = capabilitiesSupported;
        this.properties = properties;
        this.location = location;
        this.workspaceId = workspaceId;
        this.errors = errors;
        this.warnings = warnings;
        this.createdAt = createdAt;
        this.isManaged = isManaged;
        this.customMetadata = customMetadata;
        this.canRemotelyUnlock = canRemotelyUnlock;
        this.canRemotelyLock = canRemotelyLock;
        this.canProgramOfflineAccessCodes = canProgramOfflineAccessCodes;
        this.canProgramOnlineAccessCodes = canProgramOnlineAccessCodes;
        this.canSimulateRemoval = canSimulateRemoval;
        this.canSimulateConnection = canSimulateConnection;
        this.canSimulateDisconnection = canSimulateDisconnection;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Unique identifier for the device.
     */
    @JsonProperty("device_id")
    public String getDeviceId() {
        return deviceId;
    }

    @JsonProperty("device_type")
    public PhoneDeviceType getDeviceType() {
        return deviceType;
    }

    /**
     * @return Optional nickname to describe the device, settable through Seam
     */
    @JsonProperty("nickname")
    public Optional<String> getNickname() {
        return nickname;
    }

    /**
     * @return Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.
     */
    @JsonProperty("display_name")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * @return Collection of capabilities that the device supports when connected to Seam. Values are &quot;access_code,&quot; which indicates that the device can manage and utilize digital PIN codes for secure access; &quot;lock,&quot; which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; &quot;noise_detection,&quot; which indicates that the device supports monitoring and responding to ambient noise levels; &quot;thermostat,&quot; which indicates that the device can regulate and adjust indoor temperatures; and &quot;battery,&quot; which indicates that the device can manage battery life and health.
     */
    @JsonProperty("capabilities_supported")
    public List<PhoneCapabilitiesSupportedItem> getCapabilitiesSupported() {
        return capabilitiesSupported;
    }

    @JsonProperty("properties")
    public PhoneProperties getProperties() {
        return properties;
    }

    /**
     * @return Location information for the device.
     */
    @JsonProperty("location")
    public Optional<PhoneLocation> getLocation() {
        return location;
    }

    /**
     * @return Unique identifier for the Seam workspace associated with the device.
     */
    @JsonProperty("workspace_id")
    public String getWorkspaceId() {
        return workspaceId;
    }

    /**
     * @return Array of errors associated with the device. Each error object within the array contains two fields: &quot;error_code&quot; and &quot;message.&quot; &quot;error_code&quot; is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.
     */
    @JsonProperty("errors")
    public List<PhoneErrorsItem> getErrors() {
        return errors;
    }

    /**
     * @return Array of warnings associated with the device. Each warning object within the array contains two fields: &quot;warning_code&quot; and &quot;message.&quot; &quot;warning_code&quot; is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.
     */
    @JsonProperty("warnings")
    public List<PhoneWarningsItem> getWarnings() {
        return warnings;
    }

    /**
     * @return Date and time at which the device object was created.
     */
    @JsonProperty("created_at")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return Indicates whether Seam manages the device.
     */
    @JsonProperty("is_managed")
    public boolean getIsManaged() {
        return isManaged;
    }

    @JsonProperty("custom_metadata")
    public Map<String, PhoneCustomMetadataValue> getCustomMetadata() {
        return customMetadata;
    }

    @JsonProperty("can_remotely_unlock")
    public Optional<Boolean> getCanRemotelyUnlock() {
        return canRemotelyUnlock;
    }

    @JsonProperty("can_remotely_lock")
    public Optional<Boolean> getCanRemotelyLock() {
        return canRemotelyLock;
    }

    @JsonProperty("can_program_offline_access_codes")
    public Optional<Boolean> getCanProgramOfflineAccessCodes() {
        return canProgramOfflineAccessCodes;
    }

    @JsonProperty("can_program_online_access_codes")
    public Optional<Boolean> getCanProgramOnlineAccessCodes() {
        return canProgramOnlineAccessCodes;
    }

    @JsonProperty("can_simulate_removal")
    public Optional<Boolean> getCanSimulateRemoval() {
        return canSimulateRemoval;
    }

    @JsonProperty("can_simulate_connection")
    public Optional<Boolean> getCanSimulateConnection() {
        return canSimulateConnection;
    }

    @JsonProperty("can_simulate_disconnection")
    public Optional<Boolean> getCanSimulateDisconnection() {
        return canSimulateDisconnection;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Phone && equalTo((Phone) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Phone other) {
        return deviceId.equals(other.deviceId)
                && deviceType.equals(other.deviceType)
                && nickname.equals(other.nickname)
                && displayName.equals(other.displayName)
                && capabilitiesSupported.equals(other.capabilitiesSupported)
                && properties.equals(other.properties)
                && location.equals(other.location)
                && workspaceId.equals(other.workspaceId)
                && errors.equals(other.errors)
                && warnings.equals(other.warnings)
                && createdAt.equals(other.createdAt)
                && isManaged == other.isManaged
                && customMetadata.equals(other.customMetadata)
                && canRemotelyUnlock.equals(other.canRemotelyUnlock)
                && canRemotelyLock.equals(other.canRemotelyLock)
                && canProgramOfflineAccessCodes.equals(other.canProgramOfflineAccessCodes)
                && canProgramOnlineAccessCodes.equals(other.canProgramOnlineAccessCodes)
                && canSimulateRemoval.equals(other.canSimulateRemoval)
                && canSimulateConnection.equals(other.canSimulateConnection)
                && canSimulateDisconnection.equals(other.canSimulateDisconnection);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.deviceId,
                this.deviceType,
                this.nickname,
                this.displayName,
                this.capabilitiesSupported,
                this.properties,
                this.location,
                this.workspaceId,
                this.errors,
                this.warnings,
                this.createdAt,
                this.isManaged,
                this.customMetadata,
                this.canRemotelyUnlock,
                this.canRemotelyLock,
                this.canProgramOfflineAccessCodes,
                this.canProgramOnlineAccessCodes,
                this.canSimulateRemoval,
                this.canSimulateConnection,
                this.canSimulateDisconnection);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DeviceIdStage builder() {
        return new Builder();
    }

    public interface DeviceIdStage {
        DeviceTypeStage deviceId(String deviceId);

        Builder from(Phone other);
    }

    public interface DeviceTypeStage {
        DisplayNameStage deviceType(PhoneDeviceType deviceType);
    }

    public interface DisplayNameStage {
        PropertiesStage displayName(String displayName);
    }

    public interface PropertiesStage {
        WorkspaceIdStage properties(PhoneProperties properties);
    }

    public interface WorkspaceIdStage {
        CreatedAtStage workspaceId(String workspaceId);
    }

    public interface CreatedAtStage {
        IsManagedStage createdAt(OffsetDateTime createdAt);
    }

    public interface IsManagedStage {
        _FinalStage isManaged(boolean isManaged);
    }

    public interface _FinalStage {
        Phone build();

        _FinalStage nickname(Optional<String> nickname);

        _FinalStage nickname(String nickname);

        _FinalStage capabilitiesSupported(List<PhoneCapabilitiesSupportedItem> capabilitiesSupported);

        _FinalStage addCapabilitiesSupported(PhoneCapabilitiesSupportedItem capabilitiesSupported);

        _FinalStage addAllCapabilitiesSupported(List<PhoneCapabilitiesSupportedItem> capabilitiesSupported);

        _FinalStage location(Optional<PhoneLocation> location);

        _FinalStage location(PhoneLocation location);

        _FinalStage errors(List<PhoneErrorsItem> errors);

        _FinalStage addErrors(PhoneErrorsItem errors);

        _FinalStage addAllErrors(List<PhoneErrorsItem> errors);

        _FinalStage warnings(List<PhoneWarningsItem> warnings);

        _FinalStage addWarnings(PhoneWarningsItem warnings);

        _FinalStage addAllWarnings(List<PhoneWarningsItem> warnings);

        _FinalStage customMetadata(Map<String, PhoneCustomMetadataValue> customMetadata);

        _FinalStage putAllCustomMetadata(Map<String, PhoneCustomMetadataValue> customMetadata);

        _FinalStage customMetadata(String key, PhoneCustomMetadataValue value);

        _FinalStage canRemotelyUnlock(Optional<Boolean> canRemotelyUnlock);

        _FinalStage canRemotelyUnlock(Boolean canRemotelyUnlock);

        _FinalStage canRemotelyLock(Optional<Boolean> canRemotelyLock);

        _FinalStage canRemotelyLock(Boolean canRemotelyLock);

        _FinalStage canProgramOfflineAccessCodes(Optional<Boolean> canProgramOfflineAccessCodes);

        _FinalStage canProgramOfflineAccessCodes(Boolean canProgramOfflineAccessCodes);

        _FinalStage canProgramOnlineAccessCodes(Optional<Boolean> canProgramOnlineAccessCodes);

        _FinalStage canProgramOnlineAccessCodes(Boolean canProgramOnlineAccessCodes);

        _FinalStage canSimulateRemoval(Optional<Boolean> canSimulateRemoval);

        _FinalStage canSimulateRemoval(Boolean canSimulateRemoval);

        _FinalStage canSimulateConnection(Optional<Boolean> canSimulateConnection);

        _FinalStage canSimulateConnection(Boolean canSimulateConnection);

        _FinalStage canSimulateDisconnection(Optional<Boolean> canSimulateDisconnection);

        _FinalStage canSimulateDisconnection(Boolean canSimulateDisconnection);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements DeviceIdStage,
                    DeviceTypeStage,
                    DisplayNameStage,
                    PropertiesStage,
                    WorkspaceIdStage,
                    CreatedAtStage,
                    IsManagedStage,
                    _FinalStage {
        private String deviceId;

        private PhoneDeviceType deviceType;

        private String displayName;

        private PhoneProperties properties;

        private String workspaceId;

        private OffsetDateTime createdAt;

        private boolean isManaged;

        private Optional<Boolean> canSimulateDisconnection = Optional.empty();

        private Optional<Boolean> canSimulateConnection = Optional.empty();

        private Optional<Boolean> canSimulateRemoval = Optional.empty();

        private Optional<Boolean> canProgramOnlineAccessCodes = Optional.empty();

        private Optional<Boolean> canProgramOfflineAccessCodes = Optional.empty();

        private Optional<Boolean> canRemotelyLock = Optional.empty();

        private Optional<Boolean> canRemotelyUnlock = Optional.empty();

        private Map<String, PhoneCustomMetadataValue> customMetadata = new LinkedHashMap<>();

        private List<PhoneWarningsItem> warnings = new ArrayList<>();

        private List<PhoneErrorsItem> errors = new ArrayList<>();

        private Optional<PhoneLocation> location = Optional.empty();

        private List<PhoneCapabilitiesSupportedItem> capabilitiesSupported = new ArrayList<>();

        private Optional<String> nickname = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Phone other) {
            deviceId(other.getDeviceId());
            deviceType(other.getDeviceType());
            nickname(other.getNickname());
            displayName(other.getDisplayName());
            capabilitiesSupported(other.getCapabilitiesSupported());
            properties(other.getProperties());
            location(other.getLocation());
            workspaceId(other.getWorkspaceId());
            errors(other.getErrors());
            warnings(other.getWarnings());
            createdAt(other.getCreatedAt());
            isManaged(other.getIsManaged());
            customMetadata(other.getCustomMetadata());
            canRemotelyUnlock(other.getCanRemotelyUnlock());
            canRemotelyLock(other.getCanRemotelyLock());
            canProgramOfflineAccessCodes(other.getCanProgramOfflineAccessCodes());
            canProgramOnlineAccessCodes(other.getCanProgramOnlineAccessCodes());
            canSimulateRemoval(other.getCanSimulateRemoval());
            canSimulateConnection(other.getCanSimulateConnection());
            canSimulateDisconnection(other.getCanSimulateDisconnection());
            return this;
        }

        /**
         * <p>Unique identifier for the device.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("device_id")
        public DeviceTypeStage deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("device_type")
        public DisplayNameStage deviceType(PhoneDeviceType deviceType) {
            this.deviceType = deviceType;
            return this;
        }

        /**
         * <p>Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("display_name")
        public PropertiesStage displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        @java.lang.Override
        @JsonSetter("properties")
        public WorkspaceIdStage properties(PhoneProperties properties) {
            this.properties = properties;
            return this;
        }

        /**
         * <p>Unique identifier for the Seam workspace associated with the device.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("workspace_id")
        public CreatedAtStage workspaceId(String workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }

        /**
         * <p>Date and time at which the device object was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("created_at")
        public IsManagedStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * <p>Indicates whether Seam manages the device.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("is_managed")
        public _FinalStage isManaged(boolean isManaged) {
            this.isManaged = isManaged;
            return this;
        }

        @java.lang.Override
        public _FinalStage canSimulateDisconnection(Boolean canSimulateDisconnection) {
            this.canSimulateDisconnection = Optional.of(canSimulateDisconnection);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_simulate_disconnection", nulls = Nulls.SKIP)
        public _FinalStage canSimulateDisconnection(Optional<Boolean> canSimulateDisconnection) {
            this.canSimulateDisconnection = canSimulateDisconnection;
            return this;
        }

        @java.lang.Override
        public _FinalStage canSimulateConnection(Boolean canSimulateConnection) {
            this.canSimulateConnection = Optional.of(canSimulateConnection);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_simulate_connection", nulls = Nulls.SKIP)
        public _FinalStage canSimulateConnection(Optional<Boolean> canSimulateConnection) {
            this.canSimulateConnection = canSimulateConnection;
            return this;
        }

        @java.lang.Override
        public _FinalStage canSimulateRemoval(Boolean canSimulateRemoval) {
            this.canSimulateRemoval = Optional.of(canSimulateRemoval);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_simulate_removal", nulls = Nulls.SKIP)
        public _FinalStage canSimulateRemoval(Optional<Boolean> canSimulateRemoval) {
            this.canSimulateRemoval = canSimulateRemoval;
            return this;
        }

        @java.lang.Override
        public _FinalStage canProgramOnlineAccessCodes(Boolean canProgramOnlineAccessCodes) {
            this.canProgramOnlineAccessCodes = Optional.of(canProgramOnlineAccessCodes);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_program_online_access_codes", nulls = Nulls.SKIP)
        public _FinalStage canProgramOnlineAccessCodes(Optional<Boolean> canProgramOnlineAccessCodes) {
            this.canProgramOnlineAccessCodes = canProgramOnlineAccessCodes;
            return this;
        }

        @java.lang.Override
        public _FinalStage canProgramOfflineAccessCodes(Boolean canProgramOfflineAccessCodes) {
            this.canProgramOfflineAccessCodes = Optional.of(canProgramOfflineAccessCodes);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_program_offline_access_codes", nulls = Nulls.SKIP)
        public _FinalStage canProgramOfflineAccessCodes(Optional<Boolean> canProgramOfflineAccessCodes) {
            this.canProgramOfflineAccessCodes = canProgramOfflineAccessCodes;
            return this;
        }

        @java.lang.Override
        public _FinalStage canRemotelyLock(Boolean canRemotelyLock) {
            this.canRemotelyLock = Optional.of(canRemotelyLock);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_remotely_lock", nulls = Nulls.SKIP)
        public _FinalStage canRemotelyLock(Optional<Boolean> canRemotelyLock) {
            this.canRemotelyLock = canRemotelyLock;
            return this;
        }

        @java.lang.Override
        public _FinalStage canRemotelyUnlock(Boolean canRemotelyUnlock) {
            this.canRemotelyUnlock = Optional.of(canRemotelyUnlock);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_remotely_unlock", nulls = Nulls.SKIP)
        public _FinalStage canRemotelyUnlock(Optional<Boolean> canRemotelyUnlock) {
            this.canRemotelyUnlock = canRemotelyUnlock;
            return this;
        }

        @java.lang.Override
        public _FinalStage customMetadata(String key, PhoneCustomMetadataValue value) {
            this.customMetadata.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllCustomMetadata(Map<String, PhoneCustomMetadataValue> customMetadata) {
            this.customMetadata.putAll(customMetadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "custom_metadata", nulls = Nulls.SKIP)
        public _FinalStage customMetadata(Map<String, PhoneCustomMetadataValue> customMetadata) {
            this.customMetadata.clear();
            this.customMetadata.putAll(customMetadata);
            return this;
        }

        /**
         * <p>Array of warnings associated with the device. Each warning object within the array contains two fields: &quot;warning_code&quot; and &quot;message.&quot; &quot;warning_code&quot; is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllWarnings(List<PhoneWarningsItem> warnings) {
            this.warnings.addAll(warnings);
            return this;
        }

        /**
         * <p>Array of warnings associated with the device. Each warning object within the array contains two fields: &quot;warning_code&quot; and &quot;message.&quot; &quot;warning_code&quot; is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addWarnings(PhoneWarningsItem warnings) {
            this.warnings.add(warnings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "warnings", nulls = Nulls.SKIP)
        public _FinalStage warnings(List<PhoneWarningsItem> warnings) {
            this.warnings.clear();
            this.warnings.addAll(warnings);
            return this;
        }

        /**
         * <p>Array of errors associated with the device. Each error object within the array contains two fields: &quot;error_code&quot; and &quot;message.&quot; &quot;error_code&quot; is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllErrors(List<PhoneErrorsItem> errors) {
            this.errors.addAll(errors);
            return this;
        }

        /**
         * <p>Array of errors associated with the device. Each error object within the array contains two fields: &quot;error_code&quot; and &quot;message.&quot; &quot;error_code&quot; is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. &quot;message&quot; provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addErrors(PhoneErrorsItem errors) {
            this.errors.add(errors);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public _FinalStage errors(List<PhoneErrorsItem> errors) {
            this.errors.clear();
            this.errors.addAll(errors);
            return this;
        }

        /**
         * <p>Location information for the device.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage location(PhoneLocation location) {
            this.location = Optional.of(location);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "location", nulls = Nulls.SKIP)
        public _FinalStage location(Optional<PhoneLocation> location) {
            this.location = location;
            return this;
        }

        /**
         * <p>Collection of capabilities that the device supports when connected to Seam. Values are &quot;access_code,&quot; which indicates that the device can manage and utilize digital PIN codes for secure access; &quot;lock,&quot; which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; &quot;noise_detection,&quot; which indicates that the device supports monitoring and responding to ambient noise levels; &quot;thermostat,&quot; which indicates that the device can regulate and adjust indoor temperatures; and &quot;battery,&quot; which indicates that the device can manage battery life and health.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllCapabilitiesSupported(List<PhoneCapabilitiesSupportedItem> capabilitiesSupported) {
            this.capabilitiesSupported.addAll(capabilitiesSupported);
            return this;
        }

        /**
         * <p>Collection of capabilities that the device supports when connected to Seam. Values are &quot;access_code,&quot; which indicates that the device can manage and utilize digital PIN codes for secure access; &quot;lock,&quot; which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; &quot;noise_detection,&quot; which indicates that the device supports monitoring and responding to ambient noise levels; &quot;thermostat,&quot; which indicates that the device can regulate and adjust indoor temperatures; and &quot;battery,&quot; which indicates that the device can manage battery life and health.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addCapabilitiesSupported(PhoneCapabilitiesSupportedItem capabilitiesSupported) {
            this.capabilitiesSupported.add(capabilitiesSupported);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "capabilities_supported", nulls = Nulls.SKIP)
        public _FinalStage capabilitiesSupported(List<PhoneCapabilitiesSupportedItem> capabilitiesSupported) {
            this.capabilitiesSupported.clear();
            this.capabilitiesSupported.addAll(capabilitiesSupported);
            return this;
        }

        /**
         * <p>Optional nickname to describe the device, settable through Seam</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage nickname(String nickname) {
            this.nickname = Optional.of(nickname);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "nickname", nulls = Nulls.SKIP)
        public _FinalStage nickname(Optional<String> nickname) {
            this.nickname = nickname;
            return this;
        }

        @java.lang.Override
        public Phone build() {
            return new Phone(
                    deviceId,
                    deviceType,
                    nickname,
                    displayName,
                    capabilitiesSupported,
                    properties,
                    location,
                    workspaceId,
                    errors,
                    warnings,
                    createdAt,
                    isManaged,
                    customMetadata,
                    canRemotelyUnlock,
                    canRemotelyLock,
                    canProgramOfflineAccessCodes,
                    canProgramOnlineAccessCodes,
                    canSimulateRemoval,
                    canSimulateConnection,
                    canSimulateDisconnection,
                    additionalProperties);
        }
    }
}
