/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ConnectedAccount.Builder.class)
public final class ConnectedAccount {
    private final Optional<String> connectedAccountId;

    private final Optional<OffsetDateTime> createdAt;

    private final Optional<ConnectedAccountUserIdentifier> userIdentifier;

    private final Optional<String> accountType;

    private final String accountTypeDisplayName;

    private final Optional<Object> errors;

    private final Optional<Object> warnings;

    private final Map<String, ConnectedAccountCustomMetadataValue> customMetadata;

    private final boolean automaticallyManageNewDevices;

    private final Map<String, Object> additionalProperties;

    private ConnectedAccount(
            Optional<String> connectedAccountId,
            Optional<OffsetDateTime> createdAt,
            Optional<ConnectedAccountUserIdentifier> userIdentifier,
            Optional<String> accountType,
            String accountTypeDisplayName,
            Optional<Object> errors,
            Optional<Object> warnings,
            Map<String, ConnectedAccountCustomMetadataValue> customMetadata,
            boolean automaticallyManageNewDevices,
            Map<String, Object> additionalProperties) {
        this.connectedAccountId = connectedAccountId;
        this.createdAt = createdAt;
        this.userIdentifier = userIdentifier;
        this.accountType = accountType;
        this.accountTypeDisplayName = accountTypeDisplayName;
        this.errors = errors;
        this.warnings = warnings;
        this.customMetadata = customMetadata;
        this.automaticallyManageNewDevices = automaticallyManageNewDevices;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("connected_account_id")
    public Optional<String> getConnectedAccountId() {
        return connectedAccountId;
    }

    @JsonProperty("created_at")
    public Optional<OffsetDateTime> getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("user_identifier")
    public Optional<ConnectedAccountUserIdentifier> getUserIdentifier() {
        return userIdentifier;
    }

    @JsonProperty("account_type")
    public Optional<String> getAccountType() {
        return accountType;
    }

    @JsonProperty("account_type_display_name")
    public String getAccountTypeDisplayName() {
        return accountTypeDisplayName;
    }

    @JsonProperty("errors")
    public Optional<Object> getErrors() {
        return errors;
    }

    @JsonProperty("warnings")
    public Optional<Object> getWarnings() {
        return warnings;
    }

    @JsonProperty("custom_metadata")
    public Map<String, ConnectedAccountCustomMetadataValue> getCustomMetadata() {
        return customMetadata;
    }

    @JsonProperty("automatically_manage_new_devices")
    public boolean getAutomaticallyManageNewDevices() {
        return automaticallyManageNewDevices;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ConnectedAccount && equalTo((ConnectedAccount) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ConnectedAccount other) {
        return connectedAccountId.equals(other.connectedAccountId)
                && createdAt.equals(other.createdAt)
                && userIdentifier.equals(other.userIdentifier)
                && accountType.equals(other.accountType)
                && accountTypeDisplayName.equals(other.accountTypeDisplayName)
                && errors.equals(other.errors)
                && warnings.equals(other.warnings)
                && customMetadata.equals(other.customMetadata)
                && automaticallyManageNewDevices == other.automaticallyManageNewDevices;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.connectedAccountId,
                this.createdAt,
                this.userIdentifier,
                this.accountType,
                this.accountTypeDisplayName,
                this.errors,
                this.warnings,
                this.customMetadata,
                this.automaticallyManageNewDevices);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AccountTypeDisplayNameStage builder() {
        return new Builder();
    }

    public interface AccountTypeDisplayNameStage {
        AutomaticallyManageNewDevicesStage accountTypeDisplayName(String accountTypeDisplayName);

        Builder from(ConnectedAccount other);
    }

    public interface AutomaticallyManageNewDevicesStage {
        _FinalStage automaticallyManageNewDevices(boolean automaticallyManageNewDevices);
    }

    public interface _FinalStage {
        ConnectedAccount build();

        _FinalStage connectedAccountId(Optional<String> connectedAccountId);

        _FinalStage connectedAccountId(String connectedAccountId);

        _FinalStage createdAt(Optional<OffsetDateTime> createdAt);

        _FinalStage createdAt(OffsetDateTime createdAt);

        _FinalStage userIdentifier(Optional<ConnectedAccountUserIdentifier> userIdentifier);

        _FinalStage userIdentifier(ConnectedAccountUserIdentifier userIdentifier);

        _FinalStage accountType(Optional<String> accountType);

        _FinalStage accountType(String accountType);

        _FinalStage errors(Optional<Object> errors);

        _FinalStage errors(Object errors);

        _FinalStage warnings(Optional<Object> warnings);

        _FinalStage warnings(Object warnings);

        _FinalStage customMetadata(Map<String, ConnectedAccountCustomMetadataValue> customMetadata);

        _FinalStage putAllCustomMetadata(Map<String, ConnectedAccountCustomMetadataValue> customMetadata);

        _FinalStage customMetadata(String key, ConnectedAccountCustomMetadataValue value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements AccountTypeDisplayNameStage, AutomaticallyManageNewDevicesStage, _FinalStage {
        private String accountTypeDisplayName;

        private boolean automaticallyManageNewDevices;

        private Map<String, ConnectedAccountCustomMetadataValue> customMetadata = new LinkedHashMap<>();

        private Optional<Object> warnings = Optional.empty();

        private Optional<Object> errors = Optional.empty();

        private Optional<String> accountType = Optional.empty();

        private Optional<ConnectedAccountUserIdentifier> userIdentifier = Optional.empty();

        private Optional<OffsetDateTime> createdAt = Optional.empty();

        private Optional<String> connectedAccountId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ConnectedAccount other) {
            connectedAccountId(other.getConnectedAccountId());
            createdAt(other.getCreatedAt());
            userIdentifier(other.getUserIdentifier());
            accountType(other.getAccountType());
            accountTypeDisplayName(other.getAccountTypeDisplayName());
            errors(other.getErrors());
            warnings(other.getWarnings());
            customMetadata(other.getCustomMetadata());
            automaticallyManageNewDevices(other.getAutomaticallyManageNewDevices());
            return this;
        }

        @java.lang.Override
        @JsonSetter("account_type_display_name")
        public AutomaticallyManageNewDevicesStage accountTypeDisplayName(String accountTypeDisplayName) {
            this.accountTypeDisplayName = accountTypeDisplayName;
            return this;
        }

        @java.lang.Override
        @JsonSetter("automatically_manage_new_devices")
        public _FinalStage automaticallyManageNewDevices(boolean automaticallyManageNewDevices) {
            this.automaticallyManageNewDevices = automaticallyManageNewDevices;
            return this;
        }

        @java.lang.Override
        public _FinalStage customMetadata(String key, ConnectedAccountCustomMetadataValue value) {
            this.customMetadata.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllCustomMetadata(Map<String, ConnectedAccountCustomMetadataValue> customMetadata) {
            this.customMetadata.putAll(customMetadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "custom_metadata", nulls = Nulls.SKIP)
        public _FinalStage customMetadata(Map<String, ConnectedAccountCustomMetadataValue> customMetadata) {
            this.customMetadata.clear();
            this.customMetadata.putAll(customMetadata);
            return this;
        }

        @java.lang.Override
        public _FinalStage warnings(Object warnings) {
            this.warnings = Optional.of(warnings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "warnings", nulls = Nulls.SKIP)
        public _FinalStage warnings(Optional<Object> warnings) {
            this.warnings = warnings;
            return this;
        }

        @java.lang.Override
        public _FinalStage errors(Object errors) {
            this.errors = Optional.of(errors);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public _FinalStage errors(Optional<Object> errors) {
            this.errors = errors;
            return this;
        }

        @java.lang.Override
        public _FinalStage accountType(String accountType) {
            this.accountType = Optional.of(accountType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "account_type", nulls = Nulls.SKIP)
        public _FinalStage accountType(Optional<String> accountType) {
            this.accountType = accountType;
            return this;
        }

        @java.lang.Override
        public _FinalStage userIdentifier(ConnectedAccountUserIdentifier userIdentifier) {
            this.userIdentifier = Optional.of(userIdentifier);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_identifier", nulls = Nulls.SKIP)
        public _FinalStage userIdentifier(Optional<ConnectedAccountUserIdentifier> userIdentifier) {
            this.userIdentifier = userIdentifier;
            return this;
        }

        @java.lang.Override
        public _FinalStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = Optional.of(createdAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "created_at", nulls = Nulls.SKIP)
        public _FinalStage createdAt(Optional<OffsetDateTime> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage connectedAccountId(String connectedAccountId) {
            this.connectedAccountId = Optional.of(connectedAccountId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "connected_account_id", nulls = Nulls.SKIP)
        public _FinalStage connectedAccountId(Optional<String> connectedAccountId) {
            this.connectedAccountId = connectedAccountId;
            return this;
        }

        @java.lang.Override
        public ConnectedAccount build() {
            return new ConnectedAccount(
                    connectedAccountId,
                    createdAt,
                    userIdentifier,
                    accountType,
                    accountTypeDisplayName,
                    errors,
                    warnings,
                    customMetadata,
                    automaticallyManageNewDevices,
                    additionalProperties);
        }
    }
}
