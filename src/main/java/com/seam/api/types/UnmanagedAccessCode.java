/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UnmanagedAccessCode.Builder.class)
public final class UnmanagedAccessCode {
    private final UnmanagedAccessCodeType type;

    private final String accessCodeId;

    private final String deviceId;

    private final Optional<String> name;

    private final Optional<String> code;

    private final OffsetDateTime createdAt;

    private final Optional<Object> errors;

    private final Optional<Object> warnings;

    private final boolean isManaged;

    private final Optional<OffsetDateTime> startsAt;

    private final Optional<OffsetDateTime> endsAt;

    private final Map<String, Object> additionalProperties;

    private UnmanagedAccessCode(
            UnmanagedAccessCodeType type,
            String accessCodeId,
            String deviceId,
            Optional<String> name,
            Optional<String> code,
            OffsetDateTime createdAt,
            Optional<Object> errors,
            Optional<Object> warnings,
            boolean isManaged,
            Optional<OffsetDateTime> startsAt,
            Optional<OffsetDateTime> endsAt,
            Map<String, Object> additionalProperties) {
        this.type = type;
        this.accessCodeId = accessCodeId;
        this.deviceId = deviceId;
        this.name = name;
        this.code = code;
        this.createdAt = createdAt;
        this.errors = errors;
        this.warnings = warnings;
        this.isManaged = isManaged;
        this.startsAt = startsAt;
        this.endsAt = endsAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Nature of the access code. Values are &quot;ongoing&quot; for access codes that are active continuously until deactivated manually or &quot;time_bound&quot; for access codes that have a specific duration.
     */
    @JsonProperty("type")
    public UnmanagedAccessCodeType getType() {
        return type;
    }

    /**
     * @return Unique identifier for the access code.
     */
    @JsonProperty("access_code_id")
    public String getAccessCodeId() {
        return accessCodeId;
    }

    /**
     * @return Unique identifier for the device associated with the access code.
     */
    @JsonProperty("device_id")
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * @return Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    /**
     * @return Code used for access. Typically, a numeric or alphanumeric string.
     */
    @JsonProperty("code")
    public Optional<String> getCode() {
        return code;
    }

    /**
     * @return Date and time at which the access code was created.
     */
    @JsonProperty("created_at")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("errors")
    public Optional<Object> getErrors() {
        return errors;
    }

    @JsonProperty("warnings")
    public Optional<Object> getWarnings() {
        return warnings;
    }

    @JsonProperty("is_managed")
    public boolean getIsManaged() {
        return isManaged;
    }

    /**
     * @return Date and time at which the time-bound access code becomes active.
     */
    @JsonProperty("starts_at")
    public Optional<OffsetDateTime> getStartsAt() {
        return startsAt;
    }

    /**
     * @return Date and time after which the time-bound access code becomes inactive.
     */
    @JsonProperty("ends_at")
    public Optional<OffsetDateTime> getEndsAt() {
        return endsAt;
    }

    @JsonProperty("status")
    public String getStatus() {
        return "set";
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UnmanagedAccessCode && equalTo((UnmanagedAccessCode) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UnmanagedAccessCode other) {
        return type.equals(other.type)
                && accessCodeId.equals(other.accessCodeId)
                && deviceId.equals(other.deviceId)
                && name.equals(other.name)
                && code.equals(other.code)
                && createdAt.equals(other.createdAt)
                && errors.equals(other.errors)
                && warnings.equals(other.warnings)
                && isManaged == other.isManaged
                && startsAt.equals(other.startsAt)
                && endsAt.equals(other.endsAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.type,
                this.accessCodeId,
                this.deviceId,
                this.name,
                this.code,
                this.createdAt,
                this.errors,
                this.warnings,
                this.isManaged,
                this.startsAt,
                this.endsAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TypeStage builder() {
        return new Builder();
    }

    public interface TypeStage {
        AccessCodeIdStage type(UnmanagedAccessCodeType type);

        Builder from(UnmanagedAccessCode other);
    }

    public interface AccessCodeIdStage {
        DeviceIdStage accessCodeId(String accessCodeId);
    }

    public interface DeviceIdStage {
        CreatedAtStage deviceId(String deviceId);
    }

    public interface CreatedAtStage {
        IsManagedStage createdAt(OffsetDateTime createdAt);
    }

    public interface IsManagedStage {
        _FinalStage isManaged(boolean isManaged);
    }

    public interface _FinalStage {
        UnmanagedAccessCode build();

        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);

        _FinalStage code(Optional<String> code);

        _FinalStage code(String code);

        _FinalStage errors(Optional<Object> errors);

        _FinalStage errors(Object errors);

        _FinalStage warnings(Optional<Object> warnings);

        _FinalStage warnings(Object warnings);

        _FinalStage startsAt(Optional<OffsetDateTime> startsAt);

        _FinalStage startsAt(OffsetDateTime startsAt);

        _FinalStage endsAt(Optional<OffsetDateTime> endsAt);

        _FinalStage endsAt(OffsetDateTime endsAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TypeStage, AccessCodeIdStage, DeviceIdStage, CreatedAtStage, IsManagedStage, _FinalStage {
        private UnmanagedAccessCodeType type;

        private String accessCodeId;

        private String deviceId;

        private OffsetDateTime createdAt;

        private boolean isManaged;

        private Optional<OffsetDateTime> endsAt = Optional.empty();

        private Optional<OffsetDateTime> startsAt = Optional.empty();

        private Optional<Object> warnings = Optional.empty();

        private Optional<Object> errors = Optional.empty();

        private Optional<String> code = Optional.empty();

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UnmanagedAccessCode other) {
            type(other.getType());
            accessCodeId(other.getAccessCodeId());
            deviceId(other.getDeviceId());
            name(other.getName());
            code(other.getCode());
            createdAt(other.getCreatedAt());
            errors(other.getErrors());
            warnings(other.getWarnings());
            isManaged(other.getIsManaged());
            startsAt(other.getStartsAt());
            endsAt(other.getEndsAt());
            return this;
        }

        /**
         * <p>Nature of the access code. Values are &quot;ongoing&quot; for access codes that are active continuously until deactivated manually or &quot;time_bound&quot; for access codes that have a specific duration.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public AccessCodeIdStage type(UnmanagedAccessCodeType type) {
            this.type = type;
            return this;
        }

        /**
         * <p>Unique identifier for the access code.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("access_code_id")
        public DeviceIdStage accessCodeId(String accessCodeId) {
            this.accessCodeId = accessCodeId;
            return this;
        }

        /**
         * <p>Unique identifier for the device associated with the access code.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("device_id")
        public CreatedAtStage deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * <p>Date and time at which the access code was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("created_at")
        public IsManagedStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("is_managed")
        public _FinalStage isManaged(boolean isManaged) {
            this.isManaged = isManaged;
            return this;
        }

        /**
         * <p>Date and time after which the time-bound access code becomes inactive.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage endsAt(OffsetDateTime endsAt) {
            this.endsAt = Optional.of(endsAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ends_at", nulls = Nulls.SKIP)
        public _FinalStage endsAt(Optional<OffsetDateTime> endsAt) {
            this.endsAt = endsAt;
            return this;
        }

        /**
         * <p>Date and time at which the time-bound access code becomes active.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage startsAt(OffsetDateTime startsAt) {
            this.startsAt = Optional.of(startsAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "starts_at", nulls = Nulls.SKIP)
        public _FinalStage startsAt(Optional<OffsetDateTime> startsAt) {
            this.startsAt = startsAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage warnings(Object warnings) {
            this.warnings = Optional.of(warnings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "warnings", nulls = Nulls.SKIP)
        public _FinalStage warnings(Optional<Object> warnings) {
            this.warnings = warnings;
            return this;
        }

        @java.lang.Override
        public _FinalStage errors(Object errors) {
            this.errors = Optional.of(errors);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public _FinalStage errors(Optional<Object> errors) {
            this.errors = errors;
            return this;
        }

        /**
         * <p>Code used for access. Typically, a numeric or alphanumeric string.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage code(String code) {
            this.code = Optional.of(code);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "code", nulls = Nulls.SKIP)
        public _FinalStage code(Optional<String> code) {
            this.code = code;
            return this;
        }

        /**
         * <p>Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.of(name);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        public UnmanagedAccessCode build() {
            return new UnmanagedAccessCode(
                    type,
                    accessCodeId,
                    deviceId,
                    name,
                    code,
                    createdAt,
                    errors,
                    warnings,
                    isManaged,
                    startsAt,
                    endsAt,
                    additionalProperties);
        }
    }
}
