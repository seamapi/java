/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seam.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AcsSystem.Builder.class)
public final class AcsSystem {
    private final String acsSystemId;

    private final Optional<AcsSystemExternalType> externalType;

    private final Optional<String> externalTypeDisplayName;

    private final Optional<AcsSystemSystemType> systemType;

    private final Optional<String> systemTypeDisplayName;

    private final String name;

    private final OffsetDateTime createdAt;

    private final String workspaceId;

    private final List<String> connectedAccountIds;

    private final String imageUrl;

    private final String imageAltText;

    private final List<AcsSystemErrorsItem> errors;

    private final List<AcsSystemWarningsItem> warnings;

    private final Optional<Boolean> canAutomateEnrollment;

    private final Optional<Boolean> canCreateAcsAccessGroups;

    private final Optional<Boolean> canRemoveAcsUsersFromAcsAccessGroups;

    private final Optional<Boolean> canAddAcsUsersToAcsAccessGroups;

    private final Map<String, Object> additionalProperties;

    private AcsSystem(
            String acsSystemId,
            Optional<AcsSystemExternalType> externalType,
            Optional<String> externalTypeDisplayName,
            Optional<AcsSystemSystemType> systemType,
            Optional<String> systemTypeDisplayName,
            String name,
            OffsetDateTime createdAt,
            String workspaceId,
            List<String> connectedAccountIds,
            String imageUrl,
            String imageAltText,
            List<AcsSystemErrorsItem> errors,
            List<AcsSystemWarningsItem> warnings,
            Optional<Boolean> canAutomateEnrollment,
            Optional<Boolean> canCreateAcsAccessGroups,
            Optional<Boolean> canRemoveAcsUsersFromAcsAccessGroups,
            Optional<Boolean> canAddAcsUsersToAcsAccessGroups,
            Map<String, Object> additionalProperties) {
        this.acsSystemId = acsSystemId;
        this.externalType = externalType;
        this.externalTypeDisplayName = externalTypeDisplayName;
        this.systemType = systemType;
        this.systemTypeDisplayName = systemTypeDisplayName;
        this.name = name;
        this.createdAt = createdAt;
        this.workspaceId = workspaceId;
        this.connectedAccountIds = connectedAccountIds;
        this.imageUrl = imageUrl;
        this.imageAltText = imageAltText;
        this.errors = errors;
        this.warnings = warnings;
        this.canAutomateEnrollment = canAutomateEnrollment;
        this.canCreateAcsAccessGroups = canCreateAcsAccessGroups;
        this.canRemoveAcsUsersFromAcsAccessGroups = canRemoveAcsUsersFromAcsAccessGroups;
        this.canAddAcsUsersToAcsAccessGroups = canAddAcsUsersToAcsAccessGroups;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acs_system_id")
    public String getAcsSystemId() {
        return acsSystemId;
    }

    @JsonProperty("external_type")
    public Optional<AcsSystemExternalType> getExternalType() {
        return externalType;
    }

    @JsonProperty("external_type_display_name")
    public Optional<String> getExternalTypeDisplayName() {
        return externalTypeDisplayName;
    }

    @JsonProperty("system_type")
    public Optional<AcsSystemSystemType> getSystemType() {
        return systemType;
    }

    @JsonProperty("system_type_display_name")
    public Optional<String> getSystemTypeDisplayName() {
        return systemTypeDisplayName;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("created_at")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("workspace_id")
    public String getWorkspaceId() {
        return workspaceId;
    }

    @JsonProperty("connected_account_ids")
    public List<String> getConnectedAccountIds() {
        return connectedAccountIds;
    }

    @JsonProperty("image_url")
    public String getImageUrl() {
        return imageUrl;
    }

    @JsonProperty("image_alt_text")
    public String getImageAltText() {
        return imageAltText;
    }

    @JsonProperty("errors")
    public List<AcsSystemErrorsItem> getErrors() {
        return errors;
    }

    @JsonProperty("warnings")
    public List<AcsSystemWarningsItem> getWarnings() {
        return warnings;
    }

    @JsonProperty("can_automate_enrollment")
    public Optional<Boolean> getCanAutomateEnrollment() {
        return canAutomateEnrollment;
    }

    @JsonProperty("can_create_acs_access_groups")
    public Optional<Boolean> getCanCreateAcsAccessGroups() {
        return canCreateAcsAccessGroups;
    }

    @JsonProperty("can_remove_acs_users_from_acs_access_groups")
    public Optional<Boolean> getCanRemoveAcsUsersFromAcsAccessGroups() {
        return canRemoveAcsUsersFromAcsAccessGroups;
    }

    @JsonProperty("can_add_acs_users_to_acs_access_groups")
    public Optional<Boolean> getCanAddAcsUsersToAcsAccessGroups() {
        return canAddAcsUsersToAcsAccessGroups;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AcsSystem && equalTo((AcsSystem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AcsSystem other) {
        return acsSystemId.equals(other.acsSystemId)
                && externalType.equals(other.externalType)
                && externalTypeDisplayName.equals(other.externalTypeDisplayName)
                && systemType.equals(other.systemType)
                && systemTypeDisplayName.equals(other.systemTypeDisplayName)
                && name.equals(other.name)
                && createdAt.equals(other.createdAt)
                && workspaceId.equals(other.workspaceId)
                && connectedAccountIds.equals(other.connectedAccountIds)
                && imageUrl.equals(other.imageUrl)
                && imageAltText.equals(other.imageAltText)
                && errors.equals(other.errors)
                && warnings.equals(other.warnings)
                && canAutomateEnrollment.equals(other.canAutomateEnrollment)
                && canCreateAcsAccessGroups.equals(other.canCreateAcsAccessGroups)
                && canRemoveAcsUsersFromAcsAccessGroups.equals(other.canRemoveAcsUsersFromAcsAccessGroups)
                && canAddAcsUsersToAcsAccessGroups.equals(other.canAddAcsUsersToAcsAccessGroups);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.acsSystemId,
                this.externalType,
                this.externalTypeDisplayName,
                this.systemType,
                this.systemTypeDisplayName,
                this.name,
                this.createdAt,
                this.workspaceId,
                this.connectedAccountIds,
                this.imageUrl,
                this.imageAltText,
                this.errors,
                this.warnings,
                this.canAutomateEnrollment,
                this.canCreateAcsAccessGroups,
                this.canRemoveAcsUsersFromAcsAccessGroups,
                this.canAddAcsUsersToAcsAccessGroups);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AcsSystemIdStage builder() {
        return new Builder();
    }

    public interface AcsSystemIdStage {
        NameStage acsSystemId(String acsSystemId);

        Builder from(AcsSystem other);
    }

    public interface NameStage {
        CreatedAtStage name(String name);
    }

    public interface CreatedAtStage {
        WorkspaceIdStage createdAt(OffsetDateTime createdAt);
    }

    public interface WorkspaceIdStage {
        ImageUrlStage workspaceId(String workspaceId);
    }

    public interface ImageUrlStage {
        ImageAltTextStage imageUrl(String imageUrl);
    }

    public interface ImageAltTextStage {
        _FinalStage imageAltText(String imageAltText);
    }

    public interface _FinalStage {
        AcsSystem build();

        _FinalStage externalType(Optional<AcsSystemExternalType> externalType);

        _FinalStage externalType(AcsSystemExternalType externalType);

        _FinalStage externalTypeDisplayName(Optional<String> externalTypeDisplayName);

        _FinalStage externalTypeDisplayName(String externalTypeDisplayName);

        _FinalStage systemType(Optional<AcsSystemSystemType> systemType);

        _FinalStage systemType(AcsSystemSystemType systemType);

        _FinalStage systemTypeDisplayName(Optional<String> systemTypeDisplayName);

        _FinalStage systemTypeDisplayName(String systemTypeDisplayName);

        _FinalStage connectedAccountIds(List<String> connectedAccountIds);

        _FinalStage addConnectedAccountIds(String connectedAccountIds);

        _FinalStage addAllConnectedAccountIds(List<String> connectedAccountIds);

        _FinalStage errors(List<AcsSystemErrorsItem> errors);

        _FinalStage addErrors(AcsSystemErrorsItem errors);

        _FinalStage addAllErrors(List<AcsSystemErrorsItem> errors);

        _FinalStage warnings(List<AcsSystemWarningsItem> warnings);

        _FinalStage addWarnings(AcsSystemWarningsItem warnings);

        _FinalStage addAllWarnings(List<AcsSystemWarningsItem> warnings);

        _FinalStage canAutomateEnrollment(Optional<Boolean> canAutomateEnrollment);

        _FinalStage canAutomateEnrollment(Boolean canAutomateEnrollment);

        _FinalStage canCreateAcsAccessGroups(Optional<Boolean> canCreateAcsAccessGroups);

        _FinalStage canCreateAcsAccessGroups(Boolean canCreateAcsAccessGroups);

        _FinalStage canRemoveAcsUsersFromAcsAccessGroups(Optional<Boolean> canRemoveAcsUsersFromAcsAccessGroups);

        _FinalStage canRemoveAcsUsersFromAcsAccessGroups(Boolean canRemoveAcsUsersFromAcsAccessGroups);

        _FinalStage canAddAcsUsersToAcsAccessGroups(Optional<Boolean> canAddAcsUsersToAcsAccessGroups);

        _FinalStage canAddAcsUsersToAcsAccessGroups(Boolean canAddAcsUsersToAcsAccessGroups);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements AcsSystemIdStage,
                    NameStage,
                    CreatedAtStage,
                    WorkspaceIdStage,
                    ImageUrlStage,
                    ImageAltTextStage,
                    _FinalStage {
        private String acsSystemId;

        private String name;

        private OffsetDateTime createdAt;

        private String workspaceId;

        private String imageUrl;

        private String imageAltText;

        private Optional<Boolean> canAddAcsUsersToAcsAccessGroups = Optional.empty();

        private Optional<Boolean> canRemoveAcsUsersFromAcsAccessGroups = Optional.empty();

        private Optional<Boolean> canCreateAcsAccessGroups = Optional.empty();

        private Optional<Boolean> canAutomateEnrollment = Optional.empty();

        private List<AcsSystemWarningsItem> warnings = new ArrayList<>();

        private List<AcsSystemErrorsItem> errors = new ArrayList<>();

        private List<String> connectedAccountIds = new ArrayList<>();

        private Optional<String> systemTypeDisplayName = Optional.empty();

        private Optional<AcsSystemSystemType> systemType = Optional.empty();

        private Optional<String> externalTypeDisplayName = Optional.empty();

        private Optional<AcsSystemExternalType> externalType = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AcsSystem other) {
            acsSystemId(other.getAcsSystemId());
            externalType(other.getExternalType());
            externalTypeDisplayName(other.getExternalTypeDisplayName());
            systemType(other.getSystemType());
            systemTypeDisplayName(other.getSystemTypeDisplayName());
            name(other.getName());
            createdAt(other.getCreatedAt());
            workspaceId(other.getWorkspaceId());
            connectedAccountIds(other.getConnectedAccountIds());
            imageUrl(other.getImageUrl());
            imageAltText(other.getImageAltText());
            errors(other.getErrors());
            warnings(other.getWarnings());
            canAutomateEnrollment(other.getCanAutomateEnrollment());
            canCreateAcsAccessGroups(other.getCanCreateAcsAccessGroups());
            canRemoveAcsUsersFromAcsAccessGroups(other.getCanRemoveAcsUsersFromAcsAccessGroups());
            canAddAcsUsersToAcsAccessGroups(other.getCanAddAcsUsersToAcsAccessGroups());
            return this;
        }

        @java.lang.Override
        @JsonSetter("acs_system_id")
        public NameStage acsSystemId(String acsSystemId) {
            this.acsSystemId = acsSystemId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public CreatedAtStage name(String name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("created_at")
        public WorkspaceIdStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("workspace_id")
        public ImageUrlStage workspaceId(String workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("image_url")
        public ImageAltTextStage imageUrl(String imageUrl) {
            this.imageUrl = imageUrl;
            return this;
        }

        @java.lang.Override
        @JsonSetter("image_alt_text")
        public _FinalStage imageAltText(String imageAltText) {
            this.imageAltText = imageAltText;
            return this;
        }

        @java.lang.Override
        public _FinalStage canAddAcsUsersToAcsAccessGroups(Boolean canAddAcsUsersToAcsAccessGroups) {
            this.canAddAcsUsersToAcsAccessGroups = Optional.of(canAddAcsUsersToAcsAccessGroups);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_add_acs_users_to_acs_access_groups", nulls = Nulls.SKIP)
        public _FinalStage canAddAcsUsersToAcsAccessGroups(Optional<Boolean> canAddAcsUsersToAcsAccessGroups) {
            this.canAddAcsUsersToAcsAccessGroups = canAddAcsUsersToAcsAccessGroups;
            return this;
        }

        @java.lang.Override
        public _FinalStage canRemoveAcsUsersFromAcsAccessGroups(Boolean canRemoveAcsUsersFromAcsAccessGroups) {
            this.canRemoveAcsUsersFromAcsAccessGroups = Optional.of(canRemoveAcsUsersFromAcsAccessGroups);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_remove_acs_users_from_acs_access_groups", nulls = Nulls.SKIP)
        public _FinalStage canRemoveAcsUsersFromAcsAccessGroups(
                Optional<Boolean> canRemoveAcsUsersFromAcsAccessGroups) {
            this.canRemoveAcsUsersFromAcsAccessGroups = canRemoveAcsUsersFromAcsAccessGroups;
            return this;
        }

        @java.lang.Override
        public _FinalStage canCreateAcsAccessGroups(Boolean canCreateAcsAccessGroups) {
            this.canCreateAcsAccessGroups = Optional.of(canCreateAcsAccessGroups);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_create_acs_access_groups", nulls = Nulls.SKIP)
        public _FinalStage canCreateAcsAccessGroups(Optional<Boolean> canCreateAcsAccessGroups) {
            this.canCreateAcsAccessGroups = canCreateAcsAccessGroups;
            return this;
        }

        @java.lang.Override
        public _FinalStage canAutomateEnrollment(Boolean canAutomateEnrollment) {
            this.canAutomateEnrollment = Optional.of(canAutomateEnrollment);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "can_automate_enrollment", nulls = Nulls.SKIP)
        public _FinalStage canAutomateEnrollment(Optional<Boolean> canAutomateEnrollment) {
            this.canAutomateEnrollment = canAutomateEnrollment;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllWarnings(List<AcsSystemWarningsItem> warnings) {
            this.warnings.addAll(warnings);
            return this;
        }

        @java.lang.Override
        public _FinalStage addWarnings(AcsSystemWarningsItem warnings) {
            this.warnings.add(warnings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "warnings", nulls = Nulls.SKIP)
        public _FinalStage warnings(List<AcsSystemWarningsItem> warnings) {
            this.warnings.clear();
            this.warnings.addAll(warnings);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllErrors(List<AcsSystemErrorsItem> errors) {
            this.errors.addAll(errors);
            return this;
        }

        @java.lang.Override
        public _FinalStage addErrors(AcsSystemErrorsItem errors) {
            this.errors.add(errors);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public _FinalStage errors(List<AcsSystemErrorsItem> errors) {
            this.errors.clear();
            this.errors.addAll(errors);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllConnectedAccountIds(List<String> connectedAccountIds) {
            this.connectedAccountIds.addAll(connectedAccountIds);
            return this;
        }

        @java.lang.Override
        public _FinalStage addConnectedAccountIds(String connectedAccountIds) {
            this.connectedAccountIds.add(connectedAccountIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "connected_account_ids", nulls = Nulls.SKIP)
        public _FinalStage connectedAccountIds(List<String> connectedAccountIds) {
            this.connectedAccountIds.clear();
            this.connectedAccountIds.addAll(connectedAccountIds);
            return this;
        }

        @java.lang.Override
        public _FinalStage systemTypeDisplayName(String systemTypeDisplayName) {
            this.systemTypeDisplayName = Optional.of(systemTypeDisplayName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "system_type_display_name", nulls = Nulls.SKIP)
        public _FinalStage systemTypeDisplayName(Optional<String> systemTypeDisplayName) {
            this.systemTypeDisplayName = systemTypeDisplayName;
            return this;
        }

        @java.lang.Override
        public _FinalStage systemType(AcsSystemSystemType systemType) {
            this.systemType = Optional.of(systemType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "system_type", nulls = Nulls.SKIP)
        public _FinalStage systemType(Optional<AcsSystemSystemType> systemType) {
            this.systemType = systemType;
            return this;
        }

        @java.lang.Override
        public _FinalStage externalTypeDisplayName(String externalTypeDisplayName) {
            this.externalTypeDisplayName = Optional.of(externalTypeDisplayName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "external_type_display_name", nulls = Nulls.SKIP)
        public _FinalStage externalTypeDisplayName(Optional<String> externalTypeDisplayName) {
            this.externalTypeDisplayName = externalTypeDisplayName;
            return this;
        }

        @java.lang.Override
        public _FinalStage externalType(AcsSystemExternalType externalType) {
            this.externalType = Optional.of(externalType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "external_type", nulls = Nulls.SKIP)
        public _FinalStage externalType(Optional<AcsSystemExternalType> externalType) {
            this.externalType = externalType;
            return this;
        }

        @java.lang.Override
        public AcsSystem build() {
            return new AcsSystem(
                    acsSystemId,
                    externalType,
                    externalTypeDisplayName,
                    systemType,
                    systemTypeDisplayName,
                    name,
                    createdAt,
                    workspaceId,
                    connectedAccountIds,
                    imageUrl,
                    imageAltText,
                    errors,
                    warnings,
                    canAutomateEnrollment,
                    canCreateAcsAccessGroups,
                    canRemoveAcsUsersFromAcsAccessGroups,
                    canAddAcsUsersToAcsAccessGroups,
                    additionalProperties);
        }
    }
}
